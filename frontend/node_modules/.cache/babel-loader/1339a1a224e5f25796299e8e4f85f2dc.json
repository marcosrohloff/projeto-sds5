{"ast":null,"code":"var _jsxFileName = \"/home/marcos/NodeJsProjects/projeto-sds5/frontend/src/components/DonutChart/index.tsx\";\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { BASE_URL } from 'utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonutChart = () => {\n  let chartData = {\n    labels: [],\n    series: []\n  };\n  axios.get(`${BASE_URL}/sales/amountBySeller`).then(response => {\n    const data = response.data;\n    const myLabels = data.map(x => x.sellerName);\n    const mySeries = data.map(x => x.sum);\n    chartData = {\n      labels: myLabels,\n      series: mySeries\n    };\n    console.log(chartData);\n  });\n  const mockData = {};\n  const options = {\n    legend: {\n      show: true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      labels: chartData.labels\n    },\n    series: chartData.series,\n    type: \"donut\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DonutChart;\nexport default DonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"sources":["/home/marcos/NodeJsProjects/projeto-sds5/frontend/src/components/DonutChart/index.tsx"],"names":["axios","Chart","BASE_URL","DonutChart","chartData","labels","series","get","then","response","data","myLabels","map","x","sellerName","mySeries","sum","console","log","mockData","options","legend","show"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AAErB,MAAIC,SAAqB,GAAG;AAAEC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAA5B;AAEAN,EAAAA,KAAK,CAACO,GAAN,CAAW,GAAEL,QAAS,uBAAtB,EACKM,IADL,CACUC,QAAQ,IAAI;AACd,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,UAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,UAAMC,QAAQ,GAAGL,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACG,GAAhB,CAAjB;AAEAZ,IAAAA,SAAS,GAAG;AAAEC,MAAAA,MAAM,EAAEM,QAAV;AAAoBL,MAAAA,MAAM,EAAES;AAA5B,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACH,GARL;AAUA,QAAMe,QAAQ,GAAG,EAAjB;AAIA,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AADI,GAAhB;AAMA,sBACI,QAAC,KAAD;AACA,IAAA,OAAO,EAAE,EAAE,GAAGF,OAAL;AAAcf,MAAAA,MAAM,EAAED,SAAS,CAACC;AAAhC,KADT;AAEA,IAAA,MAAM,EAAED,SAAS,CAACE,MAFlB;AAGA,IAAA,IAAI,EAAC,OAHL;AAIA,IAAA,MAAM,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA/BD;;KAAMH,U;AAiCN,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { SaleSum } from 'types/sale';\nimport { BASE_URL } from 'utils/requests';\n\ntype ChartData = {\n    labels: string[];\n    series: number[];\n}\n\nconst DonutChart = () => {\n\n    let chartData : ChartData = { labels: [], series: []};\n\n    axios.get(`${BASE_URL}/sales/amountBySeller`)\n        .then(response => {\n            const data = response.data as SaleSum[];\n            const myLabels = data.map(x => x.sellerName);\n            const mySeries = data.map(x => x.sum);\n            \n            chartData = { labels: myLabels, series: mySeries};\n            console.log(chartData);\n        });\n\n    const mockData = {\n\n    }\n    \n    const options = {\n        legend: {\n            show: true\n        }\n    }\n\n    return (\n        <Chart \n        options={{ ...options, labels: chartData.labels}}\n        series={chartData.series}\n        type=\"donut\"\n        height=\"240\" />\n    );\n}\n\nexport default DonutChart;"]},"metadata":{},"sourceType":"module"}